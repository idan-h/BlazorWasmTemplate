@using Blazored.FluentValidation
@using ShortRoute.Client.Components.EditForm
@typeparam TRequest
@typeparam TCreate
@typeparam TUpdate

@inject IStringLocalizer<SharedResource> L

<EditForm EditContext="@EditContext">
    <MudDialog>

        <TitleContent>
            <MudText Typo="Typo.h6">
                @if (IsCreate)
                {
                    <MudIcon Icon="@Icons.Material.Filled.Add" Class="me-3 mb-n1" />
                }
                else
                {
                    <MudIcon Icon="@Icons.Material.Filled.Update" Class="me-3 mb-n1" />
                }

                @Title

                @TitleExtraContent?.Invoke(RequestModel)
            </MudText>
        </TitleContent>

        <DialogContent>
            <DataAnnotationsValidator />
            
            <div class="container">
                @ChildContent(RequestModel)
            </div>

        </DialogContent>

        <DialogActions>
            <MudButton DisableElevation Variant="Variant.Filled" StartIcon="@Icons.Filled.Cancel" OnClick="MudDialog.Cancel">
                @L["Cancel"]
            </MudButton>

            @ExtraButtons?.Invoke(RequestModel)

            @if (IsCreate)
            {
                <SubmitButton DisableElevation OnValidSubmitAsync="SaveAsync" Variant="Variant.Filled" StartIcon="@Icons.Filled.Save" Color="Color.Success">
                    @L["Save"]
                </SubmitButton>
            }
            else
            {
                <SubmitButton DisableElevation OnValidSubmitAsync="SaveAsync" Variant="Variant.Filled" StartIcon="@Icons.Filled.Update" Color="Color.Secondary">
                    @L["Update"]
                </SubmitButton>
            }
        </DialogActions>

    </MudDialog>
</EditForm>
@page "/tenants"
@using ShortRoute.Client.Models.Generic
@using ShortRoute.Client.Models.Tenants
@using ShortRoute.Client.Models.Users
@using ShortRoute.Contracts.Commands.Authentication.Tenants
@using ShortRoute.Contracts.Dtos.Authentication
@using ShortRoute.Client.Pages.Identity.Roles
@attribute [Authorize(Permissions.ReadTenants)]

@inject IStringLocalizer<Tenants> L
@inject IAuthenticationService Authentication

<FshTitle Title="@L["Tenants"]" Description="@L["Manage Tenants."]" />

<EntityTable TEntity="TenantModel" TId="string" TRequest="CreateUpdateTenantModel" TCreate="CreateTenantCommand" TUpdate="UpdateTenantCommand" Context="@Context">

    <ExtraActions>
        @if (_hasReadUsersPermission)
        {
            <MudMenuItem OnClick="(() => NavigateToUsers(context.Dto.Id))">
                @L["Show Users"]
            </MudMenuItem>
        }
    </ExtraActions>

    <FormTitleExtraContent>
        @if (context.IsActive && context.IsUpdate)
        {
            <MudChip Color="Color.Primary">@L["Active"]</MudChip>
        }
        else if (context.IsUpdate)
        {
            <MudChip Color="Color.Error">@L["Disabled"]</MudChip>
        }
    </FormTitleExtraContent>

    <EditFormContent>

        <div class="row">
            @if (context.IsUpdate)
            {
                <div class="col-md-6">
                    <MudTextField For="@(() => context.Id)" ReadOnly="true" Value="context.Id" Label="@L["Id"]" />
                </div>
            }
            <div class="col-md-@(context.IsUpdate ? 6 : 12)">
                <MudTextField For="@(() => context.TenantFullName)" @bind-Value="context.TenantFullName" Label="@L["Name"]" />
            </div>
        </div>

        <div class="mt-5">
            <RoleChooser @bind-Value="@context.TenantRolesName" GetRoleListFunc="GetTenantRoles" />
        </div>

    </EditFormContent>

    <FormExtraButtons>
        @if (context.IsUpdate)
        {
            <MudButton DisableElevation Variant="Variant.Filled"
                       StartIcon="@(context.IsActive ? Icons.Filled.Block : Icons.Filled.Check)"
                       OnClick="() => ChangeTenantActivation(context.Id!,
                                                           context.IsActive,
                                                           () =>
                                                           {
                                                               context.IsActive = !context.IsActive;
                                                               Context.AddEditModal.ForceRender();
                                                           })"
                       Color="@(context.IsActive ? Color.Error : Color.Primary)">
                @(context.IsActive ? @L["Disable"] : @L["Activate"])
            </MudButton>
        }
    </FormExtraButtons>

</EntityTable>
@page "/wizard"
@using FluentValidation
@using ShortRoute.Client.Components.WizardForm

@inject IStringLocalizer<SharedResource> L

<h3>WizardForm</h3>

<WizardForm Model="Data" UniqueId="example" Style="width: 80%">

    <WizardStep Title="Step 1" Description="This is the first step">
        <div class="row">
            <div class="col-md-6">
                <WizardTextField For="@(() => Data.Name)" @bind-Value="Data.Name" Label="@L["Name"]" />
            </div>
            <div class="col-md-6">
                <WizardTextField For="@(() => Data.Number)" @bind-Value="Data.Number" Label="@L["Number"]" />
            </div>
        </div>
    </WizardStep>

    <WizardStep Title="Step 2" Description="This is the second step">
        <div class="row">
            <div class="col-md-6">
                <WizardTextField For="@(() => Data.Address)" @bind-Value="Data.Address" Label="@L["Address"]" />
            </div>
            <div class="col-md-6">
                <WizardTextField For="@(() => Data.Gender)" @bind-Value="Data.Gender" Label="@L["Gender"]" />
            </div>
        </div>
    </WizardStep>

    <WizardStep Title="Step 3" Description="This is the third step">
        <div class="row">
            <div class="col-md-6">
                <WizardTextField For="@(() => Data.Currency)" @bind-Value="Data.Currency" Label="@L["Currency"]" />
            </div>

            <div class="col-md-6">
                <WizardTextField For="@(() => Data.Coin)" @bind-Value="Data.Coin" Label="@L["Coin"]" />
            </div>
        </div>
    </WizardStep>

    <WizardStep Title="Step 4" Description="This is the fourth step">
        <div class="row">
            <div class="col-md-6">
                <WizardTextField For="@(() => Data.Amount)" @bind-Value="Data.Amount" Label="@L["Amount"]" />
            </div>

            <div class="col-md-6">
                <WizardTextField For="@(() => Data.Age)" @bind-Value="Data.Age" Label="@L["Age"]" />
            </div>
        </div>
    </WizardStep>

</WizardForm>

@code {
    WizardData Data = new();

    public class WizardData
    {
        public string Name { get; set; }
        public int Number { get; set; }

        public string Address { get; set; }
        public string Gender { get; set; }

        public string Currency { get; set; }
        public string Coin { get; set; }

        public int Amount { get; set; }
        public int Age { get; set; }
    }

    public class WizardDataValidator : AbstractValidator<WizardData>
    {
        public WizardDataValidator()
        {
            RuleFor(x => x.Name)
                .NotEmpty()
                .Length(3, 100);

            RuleFor(x => x.Age)
                .Must(x => x > 100);

            RuleFor(x => x.Number)
                .Must(x => x > 4);

            RuleFor(x => x.Amount)
                .Must(x => x < 3);
        }
    }
}

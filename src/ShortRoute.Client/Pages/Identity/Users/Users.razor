@page "/users"
@using ShortRoute.Client.Models.Users
@using ShortRoute.Contracts.Commands.Authentication.Users
@using ShortRoute.Contracts.Dtos.Authentication
@using ShortRoute.Contracts.Queries.Authentication.Users
@using ShortRoute.Contracts.Queries.Common
@attribute [Authorize(Permissions.ReadUsers)]

@inject IStringLocalizer<Users> L

<FshTitle Title="@L["Users"]" Description="@L["Manage Users"]" />

<EntityTable TEntity="UserDto" TId="string" TRequest="CreateUpdateUserModel" TCreate="CreateUserCommand" TUpdate="UpdateUserCommand" Context="@Context">
    <ExtraActions>
        @*<MudMenuItem OnClick="(() => ViewProfile(context.Id!))">@L["View Profile"]</MudMenuItem>*@
        @if (_canViewRoles)
        {
            <MudMenuItem OnClick="(() => ManageRoles(context.Id!))">@L["Manage Roles"]</MudMenuItem>
        }
    </ExtraActions>

    <FormTitleExtraContent>
        @if (context.IsActive && context.IsUpdate)
        {
            <MudChip Color="Color.Primary">@L["Active"]</MudChip>
        }
        else if (context.IsUpdate)
        {
            <MudChip Color="Color.Error">@L["Disabled"]</MudChip>
        }
    </FormTitleExtraContent>

    <EditFormContent>

        @* Add tenant list to choose from *@
        @* Add roles *@

        <div class="row">
            @if (context.IsUpdate)
            {
                <div class="col-md-4">
                    <MudTextField For="@(() => context.Id)" ReadOnly="true" Value="context.Id" Label="@L["Id"]" />
                </div>
            }
            <div class="col-md-@(context.IsUpdate ? 4 : 6)">
                <MudTextField For="@(() => context.Email)" ReadOnly="context.IsUpdate" InputType="InputType.Email"
                    @bind-Value="context.Email" Label="@L["Email"]" />
            </div>
            @if (context.IsCreate)
            {
                <div class="col-md-6">
                    <MudTextField For="@(() => context.TenantId)" @bind-Value="context.TenantId" Label="@L["TenantName"]" />
                </div>
            }
            else
            {
                <div class="col-md-4">
                    <MudTextField For="@(() => context.TenantName)" ReadOnly="true" Value="context.TenantName" Label="@L["TenantName"]" />
                </div>
            }
        </div>

        <div class="row">
            <div class="col-md-6">
                <MudTextField For="@(() => context.FirstName)" @bind-Value="context.FirstName" Label="@L["First Name"]" />
            </div>
            <div class="col-md-6">
                <MudTextField For="@(() => context.LastName)" @bind-Value="context.LastName" Label="@L["Last Name"]" />
            </div>
        </div>

        @if (context.IsCreate)
        {
            <div class="row">
                <div class="col-md-6">
                    <MudTextField For="@(() => context.Password)" @bind-Value="context.Password" Label="@L["Password"]"
                        InputType="@_passwordInput" Adornment="Adornment.End" AdornmentIcon="@_passwordInputIcon"
                        OnAdornmentClick="TogglePasswordVisibility" />
                </div>
                <div class="col-md-6">
                    <MudTextField For="@(() => context.ConfirmPassword)" @bind-Value="context.ConfirmPassword"
                        Label="@L["Confirm Password"]" InputType="InputType.Password" />
                </div>
            </div>
        }

        <div class="mt-5">
            <UserRoles Id="@context.Id" />
        </div>

    </EditFormContent>

    <FormExtraButtons>
        @if (context.IsUpdate)
        {
            <MudButton DisableElevation Variant="Variant.Filled"
                       StartIcon="@(context.IsActive ? Icons.Filled.PersonOff : Icons.Filled.Person)"
                       OnClick="() => DisableUser(context)"
                       Color="@(context.IsActive ? Color.Error : Color.Primary)">
                @(context.IsActive ? @L["Disable"] : @L["Activate"])
            </MudButton>
        }
    </FormExtraButtons>

</EntityTable>
